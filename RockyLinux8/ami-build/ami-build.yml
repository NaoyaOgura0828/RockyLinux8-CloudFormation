AWSTemplateFormatVersion: 2010-09-09
Description: AMI-Build for RockyLinux8

Parameters:
  SystemName:
    Type: String
    AllowedPattern: '[a-zA-Z0-9-]*'
  EnvType:
    Description: Environment type.
    Type: String
    AllowedValues: [all, dev, stg, prod]
    ConstraintDescription: must specify all, dev, stg, or prod.
  RecipeVer:
    Type: String
  CompVer:
    Type: String
  Platform:
    Type: String
  InstanceType:
    Type: String
  IsEncrypted:
    Type: String
  VolumeSize:
    Type: Number
  VolumeType:
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  OriginAMI:
    Type: String

Mappings:
  AzMap:
    ap-northeast-1:
      1st: ap-northeast-1a
      2nd: ap-northeast-1c
      3rd: ap-northeast-1d

Resources:
  # ImagePipeline 作成
  ImageBuilderImagePipeline:
    Type: AWS::ImageBuilder::ImagePipeline
    Properties:
      Name: !Sub
        - ${SystemName}-${EnvType}-ami-pipe
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      Description: !Sub
        - ${SystemName}-${EnvType}-ami-pipe
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      ImageRecipeArn: !GetAtt ImageBuilderImageRecipe.Arn
      InfrastructureConfigurationArn: !GetAtt ImageBuilderInfrastructureConfiguration.Arn
      DistributionConfigurationArn: !GetAtt ImageBuilderDistributionConfiguration.Arn
      ImageTestsConfiguration:
        ImageTestsEnabled: true
        TimeoutMinutes: 720
      Status: ENABLED
      Tags:
        Name: !Sub
          - ${SystemName}-${EnvType}-ami-pipe
          - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
        SystemName: !Ref SystemName
        EnvType: !Ref EnvType

  # ImageRecipe 作成
  ImageBuilderImageRecipe:
    Type: AWS::ImageBuilder::ImageRecipe
    Properties:
      Name: !Sub
        - ${SystemName}-${EnvType}-ami-recipe
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      Description: !Sub
        - ${SystemName}-${EnvType}-ami-recipe
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      Version: !Ref RecipeVer
      Components:
        - ComponentArn: !GetAtt ImageBuilderComponent.Arn
      ParentImage: !Ref OriginAMI
      BlockDeviceMappings:
      -
        DeviceName: '/dev/sda1'
        Ebs:
          DeleteOnTermination: true
          Encrypted: !Ref IsEncrypted
          VolumeSize: !Ref VolumeSize
          VolumeType: !Ref VolumeType
      Tags:
        Name: !Sub
          - ${SystemName}-${EnvType}-ami-recipe
          - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
        SystemName: !Ref SystemName
        EnvType: !Ref EnvType

  # Component 作成
  ImageBuilderComponent:
    Type: AWS::ImageBuilder::Component
    Properties:
      Name: !Sub
        - ${SystemName}-${EnvType}-ami-comp
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      Description: !Sub
        - ${SystemName}-${EnvType}-ami-comp
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      Version: !Ref CompVer
      Platform: !Ref Platform
      Data: !Sub
        |
        name: CreatingDesktopEnvironment
        description: Build a Japanese desktop environment.
        schemaVersion: 1.0

        phases:
          - name: build
            steps:
              - name: CreatingDesktopEnvironment
                action: ExecuteBash
                inputs:
                  commands:
                    - sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm -y
                    - sudo dnf install xrdp tigervnc-server -y
                    - sudo systemctl enable xrdp
                    - sudo systemctl start xrdp
                    - sudo dnf group install "Server with GUI" -y
                    - sudo dnf install gnome-tweak-tool -y
                    - sudo dnf install langpacks-ja glibc-langpack-ja.x86_64 -y
                    - sudo dnf update -y
      Tags:
        Name: !Sub
          - ${SystemName}-${EnvType}-ami-comp
          - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
        SystemName: !Ref SystemName
        EnvType: !Ref EnvType

  # DistributionConfiguration 作成
  ImageBuilderDistributionConfiguration:
    Type: AWS::ImageBuilder::DistributionConfiguration
    Properties:
      Name: !Sub
        - ${SystemName}-${EnvType}-ami-dist
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      Description: !Sub
        - ${SystemName}-${EnvType}-ami-dist
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      Distributions:
        - Region: !Ref AWS::Region
          AmiDistributionConfiguration:
            description: !Sub
              - ${SystemName}-${EnvType}-ami-dist
              - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
            amiTags:
              Name: !Sub
                - ${SystemName}-${EnvType}-ami-dist
                - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
              SystemName: !Ref SystemName
              EnvType: !Ref EnvType
      Tags:
        Name: !Sub
          - ${SystemName}-${EnvType}-ami-dist
          - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
        SystemName: !Ref SystemName
        EnvType: !Ref EnvType

  # InfrastructureConfiguration 作成
  ImageBuilderInfrastructureConfiguration:
    Type: AWS::ImageBuilder::InfrastructureConfiguration
    Properties:
      Name: !Sub
        - ${SystemName}-${EnvType}-ami-infra
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      Description: !Sub
        - ${SystemName}-${EnvType}-ami-infra
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      InstanceTypes:
        - !Ref InstanceType
      InstanceProfileName:
        Fn::ImportValue: !Sub
          - ${SystemName}-${EnvType}-profile-ami-build-${AWS::Region}
          - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      SecurityGroupIds:
        - Fn::ImportValue: !Sub
          - ${SystemName}-${EnvType}-ec2-sg
          - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      SubnetId:
        Fn::ImportValue: !Sub
          - ${SystemName}-${EnvType}-public-subnet
          - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
      Logging:
        S3Logs: {}
      KeyPair: !Ref KeyName
      TerminateInstanceOnFailure: true
      Tags:
        Name: !Sub
          - ${SystemName}-${EnvType}-ami-infra
          - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
        SystemName: !Ref SystemName
        EnvType: !Ref EnvType

Outputs:
  ImageBuilderImagePipeline:
    Value: !Ref ImageBuilderImagePipeline
    Export:
      Name: !Sub
        - ${SystemName}-${EnvType}-ami-pipe
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
  ImageBuilderImageRecipe:
    Value: !Ref ImageBuilderImageRecipe
    Export:
      Name: !Sub
        - ${SystemName}-${EnvType}-ami-recipe
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
  ImageBuilderComponent:
    Value: !Ref ImageBuilderComponent
    Export:
      Name: !Sub
        - ${SystemName}-${EnvType}-ami-comp
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
  ImageBuilderDistributionConfiguration:
    Value: !Ref ImageBuilderDistributionConfiguration
    Export:
      Name: !Sub
        - ${SystemName}-${EnvType}-ami-dist
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}
  ImageBuilderInfrastructureConfiguration:
    Value: !Ref ImageBuilderInfrastructureConfiguration
    Export:
      Name: !Sub
        - ${SystemName}-${EnvType}-ami-infra
        - {SystemName: !Ref SystemName, EnvType: !Ref EnvType}